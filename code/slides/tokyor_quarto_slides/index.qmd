---
title: Non-designer's Quarto Presentation
author: Kazuharu Yanagimoto
date: 2022-03-04
date-format: long
title-slide-attributes:
    data-background-image: "https://source.unsplash.com/IhWRrZx4-kk"
    data-background-color: "#0086AB"
execute:
    echo: false
    warning: false
    message: false
    cache: false
format:
  revealjs:
    standalone: false
    embed-resources: false
    width: 1600
    height: 900
    theme: custom.scss
    slide-number: true
    fig-cap-location: top
    fig-format: svg
    pdf-separate-fragments: false
    fig-align: center
---

# Introduction {visibility="hidden"}

```{r}
library(tidyverse)
library(gt)
library(gtExtras)
library(quartomonothemer)
library(showtext)
```

```{r}
font_title <- "Noto Sans JP"
font_text <- "Noto Sans JP"
font_code <- "Fira Code"
color_base <- "#0086AB"
color_base_light <- "#97D3E3"

gray <- "#bebebe"
darkgray <- "#6d6d6d"

font_add_google(font_title)
font_add_google(font_code)
showtext_auto()

style_mono_quarto(
  font_title = font_title,
  font_text = font_text,
  font_code = font_code,
  google_fonts = c(font_title, font_code),
  color_base = color_base,
  path_scss = here::here("code/slides/tokyor_quarto_slides/custom.scss")
)
```

## Quartoとは

<br>

![](img/quarto.drawio.svg)

<br>

- Rを使う場合 _knitr_ が動くので, ほとんどRmarkdownと変わらない
- Rmarkdown と大きく違う点 $\Rightarrow$ Revealjs スライド

## Quarto Revealjs

<br>

:::: {.columns}

::: {.column width="50%"}

```{=html}
<iframe class="slide-deck" width="800" height="450" src="https://kazuyanagimoto.com/quarto-slides-example/code/slides/quartomonothemer/mytheme"></iframe>
```

[{{< fa chalkboard-user >}} HTML](https://kazuyanagimoto.com/quarto-slides-example/code/slides/quartomonothemer/mytheme) &nbsp; 
[{{< fa file-pdf >}} PDF](https://kazuyanagimoto.com/quarto-slides-example/code/slides/quartomonothemer/mytheme/quartomonothemer_mytheme.pdf) &nbsp; 
[ {{< fa brands github >}} qmd](https://github.com/kazuyanagimoto/quarto-slides-example/blob/main/code/slides/quartomonothemer/mytheme/index.qmd)
:::

::: {.column width="50%"}

```{=html}
<iframe class="slide-deck" width="800" height="450" src="https://kazuyanagimoto.com/research/working-papers/static-norm/yanagimoto-why.html"></iframe>
```

[ {{< fa chalkboard-teacher >}} HTML](https://kazuyanagimoto.com/research/working-papers/static-norm/yanagimoto-why.html) &nbsp; 
[ {{< fa file-pdf >}} PDF](https://kazuyanagimoto.com/research/working-papers/static-norm/yanagimoto-why_slides.pdf)


:::

::::

## なぜQuarto/Revealjsなのか?

```{r}
gtb <- tribble(
  ~name,       ~design, ~speed, ~maintain, 
  "PowerPoint",   "👩‍🎨",    "❌",       "❌", 
  "Beamer",        "❌",    "✔️",       "✔️",
  "Quarto",        "✔️",    "✔️",       "✔️") |>
  gt(rowname_col = "name") |>
  cols_label(design = "デザイン性", speed = "労力", maintain = "保守性") |>
  cols_align(align = "center")

gtb
```

<br>

- PowerPointでおしゃれにするには時間がかかる. 内容変更に弱い
- Beamerはダサい.^[個人の感想です.] デザインの自由度が低く, カスタマイズに $\LaTeX$ の知識がいる
- Quartoはそこそこの労力でそこそこのデザインのスライドが作れる.

# Quarto Revealjsの基本

## スライド

<br>

:::: {.columns}
::: {.column width="50%"}
``` {.markdown}
---
title: "私のスライド"
author: "柳本和春"
format: revealjs
---

## 最初のスライド

- あれ
- これ

## 二番目のスライド

**これが太字**で*これが斜体*. $x = \pi$として,

$$
e^{ix} + 1 = 0
$$

```
:::
::: {.column width="50%"}
```{=html}
<iframe class="slide-deck" width="800" height="450" src="examples/markdown.html"></iframe>
```
:::
::::

- h2レベルのヘッダーでスライドが区切られます
- タイトルなしのスライドは`---`で区切ります

## フラグメント

<br>

:::: {.columns}
::: {.column width="50%"}
``` {.markdown}
## インクリメンタルリスト

::: {.incremental}
- あれ
- これ
- それ
:::

## ポーズ

まずこれを見せ

. . .

その後これを見せる
```
:::
::: {.column width="50%"}
```{=html}
<iframe class="slide-deck" width="800" height="450" src="examples/incremental.html"></iframe>
```
:::
::::

より複雑な例はTom Mockの[この部分](https://rstudio-conf-2022.github.io/get-started-quarto/materials/05-presentations.html#/lists)のプレゼンをみるとよいと思います


# Quarto Design Tips

## Quartoのカスタムテーマ

<br>

:::: {.columns}

::: {.column width="60%"}

```{.scss filename="custom.scss"}
// fonts
$font-family-sans-serif: Montserrat, sans-serif !default;
$font-family-monospace: "Fira Code", monospace  !default;

// colors
$body-bg: #fff !default;
$body-color: #272822 !default;
$link-color: #055099 !default;

// headings
$presentation-heading-font: "Josefin Sans", sans-serif !default;
$presentation-heading-color: #1C5253 !default;

$h1-font-size: 1.6em !default;
$h2-font-size: 1.3em !default;
$h3-font-size: 1.15em !default;
$h4-font-size: 1em !default;
```

:::

::: {.column width="40%"}
```{.yaml filename="slides.qmd"}
---
title: "Presentation"
format:
  revealjs: 
    theme: [default, custom.scss]
---
```
:::

::::

<br>

SASS変数([リスト](https://quarto.org/docs/presentations/revealjs/themes.html#sass-variables))
をscssファイルの中で指定することで, テーマをカスタムできます

## ggplot2: フォント

- [サンプル](https://kazuyanagimoto.com/quarto-slides-example/code/slides/quartomonothemer/mytheme)の様に, スライドの**フォント**と**色**がグラフとマッチしているとかっこいい
- フォントは以下のように設定すると, 何度も設定しなくて済む


:::: {.columns}

::: {.column width="50%"}

**グローバル設定**

```{.r}
font_title <- "Josefin Sans"
font_text <- "Montserrat"
size_base <- 20

theme_set(theme_minimal(
            base_size = size_base,
            base_family = font_text))
theme_update(
  plot.title = element_text(
                size = size_base * 1.2,
                face = "bold",
                family = font_title),
  panel.grid.minor = element_blank(),
  legend.position = "bottom",
  plot.title.position = "plot"
)

```

:::

::: {.column width="50%"}

**オリジナルテーマ**

```{.r}
theme_quarto <- function(
                  font_title = "Josefin Sans",
                  font_text = "Montserrat",
                  size_base = 20) {

  theme_minimal(base_family = font_text,
                base_size = size_base) +
    theme(
      plot.title = element_text(
                    size = size_base * 1.2,
                    face = "bold",
                    family = font_title),
      panel.grid.minor = element_blank(),
      legend.position = "bottom",
      plot.title.position = "plot"
    )
}

```

:::

::::

## ggplot2: 色

デフォルトのカラーパレットを替えたければ, 以下のようにできます

```{.r}
scale_colour_discrete <- function(...) {
  scale_colour_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
}

scale_fill_discrete <- function(...) {
  scale_fill_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
}
```

<br>

しかし, このやり方だと例外が多く発生してしまったので, 私は基本的に

- `scale_*_manual()` で毎回指定
- `geom_point(color = color_base)` なども毎回指定しています


## 色の選び方

プレゼンの中で話をしたい変数の数は限られていると思います.

- 話をしない変数は灰色でいい
- 塗り分けも, ベースカラー, アクセントカラー, グレーとその薄色があればいい
- `gghighlight` を使えば簡単


ベースとアクセントカラーの選び方は, [HUE/360](https://hue360.herokuapp.com/)などを参考にすればいいと思います.


## quartomonothemer

<br>

[kazuyanagimoto/quartomonothemer](https://github.com/kazuyanagimoto/quartomonothemer)というパッケージを作りました.

<br>

:::: {.columns}

::: {.column width="50%"}
1. `style_mono_quarto()` を実行すると`custom.scss`が作られる
1. `theme_quarto()` というggplot2のテーマが作られる (フォントのみ)
1. 色は各プロット毎に指定
:::

::: {.column width="50%"}
```{.r}
library(showtext)
library(quartomonothemer)
font_title <- "Noto Sans JP"
font_text <- "Noto Sans JP"
font_code <- "Fira Code"
color_base <- "#0086AB"

font_add_google(font_title)
font_add_google(font_code)
showtext_auto()

style_mono_quarto(
  font_title = font_title,
  font_text = font_text,
  font_code = font_code,
  google_fonts = c(font_title, font_code),
  color_base = color_base
)
```
:::

::::

## テーブル

:::: {.columns}

::: {.column width="50%"}
```{=html}
<iframe class="slide-deck" width="800" height="450" src="https://kazuyanagimoto.com/quarto-slides-example/code/slides/quartomonothemer/mytheme/#/regression-of-survival-rate"></iframe>
```
:::

::: {.column width="50%"}
```{=html}
<iframe class="slide-deck" width="800" height="450" src="https://kazuyanagimoto.com/quarto-slides-example/code/slides/quartomonothemer/mytheme/#/bill-length-by-sex"></iframe>
```
:::

::::


Markdownや`kableExtra`もいいですが, プレゼン用では`gtExtras`が便利だと思います.

- `gt`は文法が`kableExtra`より, 洗練されている
- `gt_highlight_rows()` が簡単できれい. 色はベースカラーの薄い色がおすすめ


## VSCode Draw.io Intergration

![](img/drawio.png){fig-align="center"}

ちょっとした図の挿入には[Draw.io Intergration](https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio)がいいです

- VSCodeであれば, Quartoと同じエディターで図を作成することができる
- `*.drawio.svg`, `*.drawio.png`というファイル名ならエクスポートせずに図を使える


## Enjoy!